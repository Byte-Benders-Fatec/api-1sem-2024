
package pom.xml.gui;

import javax.swing.*;
import pom.xml.utils.AppConfig;
import pom.xml.sql.SQLExecutor;
import pom.xml.sql.SQLGenerator;
import java.awt.*;
import java.awt.event.*;
import java.sql.SQLException;
import java.util.concurrent.TimeUnit;

public class GUI extends javax.swing.JFrame {
    private SQLExecutor sqlExecutor;
    private AppConfig appConfig;
    
    public GUI() {
        
        initComponents();
        
        appConfig = new AppConfig();
        sqlExecutor = new SQLExecutor(appConfig);
        
        setTitle("API-2SEM-2024");
        setSize(730,490);
        setResizable(true);
        setLayout(new BorderLayout());
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        
        schemaField.setText(appConfig.getDbSchema());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        questionField = new javax.swing.JTextField();
        questionLabel = new javax.swing.JLabel();
        schemaLabel = new javax.swing.JLabel();
        resultLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultArea = new javax.swing.JTextArea();
        getSQLButton = new javax.swing.JButton();
        configButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        schemaField = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        questionField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                questionFieldActionPerformed(evt);
            }
        });

        questionLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        questionLabel.setText("Ask a question:");

        schemaLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        schemaLabel.setText("Database schema:");

        resultLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        resultLabel.setText("Result:");

        resultArea.setEditable(false);
        resultArea.setColumns(20);
        resultArea.setRows(5);
        jScrollPane1.setViewportView(resultArea);

        getSQLButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        getSQLButton.setText("Search");
        getSQLButton.setMaximumSize(new java.awt.Dimension(90, 23));
        getSQLButton.setMinimumSize(new java.awt.Dimension(90, 23));
        getSQLButton.setPreferredSize(new java.awt.Dimension(90, 23));
        getSQLButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getSQLButtonActionPerformed(evt);
            }
        });

        configButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        configButton.setText("Settings");
        configButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                configButtonActionPerformed(evt);
            }
        });

        schemaField.setEditable(false);
        schemaField.setColumns(20);
        schemaField.setRows(5);
        jScrollPane2.setViewportView(schemaField);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(schemaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(questionLabel)
                                .addComponent(configButton))
                            .addGap(86, 86, 86)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(getSQLButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(questionField, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jScrollPane2)
                        .addComponent(resultLabel)
                        .addComponent(jScrollPane1)))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(questionLabel)
                    .addComponent(questionField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(schemaLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(getSQLButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(configButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(resultLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void questionFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_questionFieldActionPerformed
        
        
        
    }//GEN-LAST:event_questionFieldActionPerformed

    private void configButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_configButtonActionPerformed
                
        GUIAppConfig NovaInstanciaConfig = new GUIAppConfig(this, appConfig);
        NovaInstanciaConfig.setVisible(true);
        configButton.setEnabled(false);
    }//GEN-LAST:event_configButtonActionPerformed
    
    public void configButtonEnable() {
        configButton.setEnabled(true);
    }
    
    private void getSQLButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getSQLButtonActionPerformed
        
        if (questionField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Question field empty!", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            resultArea.setText("Processing...");
            
            new SwingWorker<String, String>() {
                @Override
                protected String doInBackground() throws Exception {
                    // Realize as operações de longa duração aqui
                    SQLGenerator sqlGenerator = new SQLGenerator(appConfig);
                    String sqlQuery = sqlGenerator.getSQL(questionField.getText());
                    return sqlExecutor.resultFromSqlQuery(sqlQuery);
                }
                @Override
                protected void done() {
                    try {
                        // Atualize a área de texto com o resultado após a operação de longa duração
                        String resultSQLQuery = get();
                        resultArea.setText(resultSQLQuery);
                    } catch (Exception e) {
                        resultArea.setText("");
                        JOptionPane.showMessageDialog(null, "Sorry, invalid query!", "Information", JOptionPane.INFORMATION_MESSAGE);
                    }
                }
            }.execute();         
                     
        }
    }//GEN-LAST:event_getSQLButtonActionPerformed
    
    public void setSchemaField(){
        schemaField.setText(appConfig.getDbSchema());
    }
    
    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton configButton;
    private javax.swing.JButton getSQLButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField questionField;
    private javax.swing.JLabel questionLabel;
    private javax.swing.JTextArea resultArea;
    private javax.swing.JLabel resultLabel;
    private javax.swing.JTextArea schemaField;
    private javax.swing.JLabel schemaLabel;
    // End of variables declaration//GEN-END:variables
}
